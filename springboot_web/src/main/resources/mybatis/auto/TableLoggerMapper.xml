<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clinbrain.datac.mapper.auto.TableLoggerMapper">
  <resultMap id="BaseResultMap" type="com.clinbrain.datac.model.auto.TableLogger">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="logger_file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="table_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="source_batch" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="target_batch" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="start_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="message" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
    <association property="tableConfig" autoMapping="true" columnPrefix="tc_"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.clinbrain.datac.model.auto.TableLoggerWithBLOBs">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="logger_file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="table_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="source_batch" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="target_batch" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="start_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="message" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="source_data" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="target_data" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
    <association property="tableConfig" autoMapping="true" javaType="com.clinbrain.datac.model.auto.TableConfig" columnPrefix="tc_"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    t.id, t.logger_file, t.table_id, t.source_batch, t.target_batch, t.start_date, t.end_date, t.create_date,
    t.status, t.message
  </sql>
  <sql id="TableConfig_Columns">
    tc.id as tc_id,tc.task_name as tc_task_name,tc.source_code as tc_source_code,tc.source_table as tc_source_table,
    tc.source_sql as tc_source_sql,tc.target_code as tc_target_code,tc.target_table as tc_target_table,tc.target_sql as tc_target_sql,
    tc.start_date as tc_start_date, tc.end_date as tc_end_date ,tc.run_type as tc_run_type,tc.job_type as tc_job_type,
    tc.only_count as tc_only_count,tc.`range` as tc_range,tc.`enable` as tc_enable
  </sql>
  <sql id="Blob_Column_List">
    t.source_data, t.target_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.clinbrain.datac.model.auto.TableLoggerExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    ,
    <include refid="TableConfig_Columns" />
    from table_logger t inner join table_config tc on t.table_id = tc.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.clinbrain.datac.model.auto.TableLoggerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from table_logger t inner join table_config tc on t.table_id = tc.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from table_logger t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from table_logger
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.clinbrain.datac.model.auto.TableLoggerExample">
    delete from table_logger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.clinbrain.datac.model.auto.TableLoggerWithBLOBs">
    insert into table_logger (id, logger_file, table_id, 
      source_batch, target_batch, start_date, 
      end_date, create_date, status, 
      message, source_data, target_data
      )
    values (#{id,jdbcType=INTEGER}, #{loggerFile,jdbcType=VARCHAR}, #{tableId,jdbcType=INTEGER}, 
      #{sourceBatch,jdbcType=VARCHAR}, #{targetBatch,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, 
      #{endDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{message,jdbcType=VARCHAR}, #{sourceData,jdbcType=LONGVARCHAR}, #{targetData,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.clinbrain.datac.model.auto.TableLoggerWithBLOBs">
    insert into table_logger
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loggerFile != null">
        logger_file,
      </if>
      <if test="tableId != null">
        table_id,
      </if>
      <if test="sourceBatch != null">
        source_batch,
      </if>
      <if test="targetBatch != null">
        target_batch,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="sourceData != null">
        source_data,
      </if>
      <if test="targetData != null">
        target_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loggerFile != null">
        #{loggerFile,jdbcType=VARCHAR},
      </if>
      <if test="tableId != null">
        #{tableId,jdbcType=INTEGER},
      </if>
      <if test="sourceBatch != null">
        #{sourceBatch,jdbcType=VARCHAR},
      </if>
      <if test="targetBatch != null">
        #{targetBatch,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="sourceData != null">
        #{sourceData,jdbcType=LONGVARCHAR},
      </if>
      <if test="targetData != null">
        #{targetData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.clinbrain.datac.model.auto.TableLoggerExample" resultType="java.lang.Long">
    select count(*) from table_logger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update table_logger
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loggerFile != null">
        logger_file = #{record.loggerFile,jdbcType=VARCHAR},
      </if>
      <if test="record.tableId != null">
        table_id = #{record.tableId,jdbcType=INTEGER},
      </if>
      <if test="record.sourceBatch != null">
        source_batch = #{record.sourceBatch,jdbcType=VARCHAR},
      </if>
      <if test="record.targetBatch != null">
        target_batch = #{record.targetBatch,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceData != null">
        source_data = #{record.sourceData,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.targetData != null">
        target_data = #{record.targetData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update table_logger
    set id = #{record.id,jdbcType=INTEGER},
      logger_file = #{record.loggerFile,jdbcType=VARCHAR},
      table_id = #{record.tableId,jdbcType=INTEGER},
      source_batch = #{record.sourceBatch,jdbcType=VARCHAR},
      target_batch = #{record.targetBatch,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      message = #{record.message,jdbcType=VARCHAR},
      source_data = #{record.sourceData,jdbcType=LONGVARCHAR},
      target_data = #{record.targetData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update table_logger
    set id = #{record.id,jdbcType=INTEGER},
      logger_file = #{record.loggerFile,jdbcType=VARCHAR},
      table_id = #{record.tableId,jdbcType=INTEGER},
      source_batch = #{record.sourceBatch,jdbcType=VARCHAR},
      target_batch = #{record.targetBatch,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      message = #{record.message,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.clinbrain.datac.model.auto.TableLoggerWithBLOBs">
    update table_logger
    <set>
      <if test="loggerFile != null">
        logger_file = #{loggerFile,jdbcType=VARCHAR},
      </if>
      <if test="tableId != null">
        table_id = #{tableId,jdbcType=INTEGER},
      </if>
      <if test="sourceBatch != null">
        source_batch = #{sourceBatch,jdbcType=VARCHAR},
      </if>
      <if test="targetBatch != null">
        target_batch = #{targetBatch,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="sourceData != null">
        source_data = #{sourceData,jdbcType=LONGVARCHAR},
      </if>
      <if test="targetData != null">
        target_data = #{targetData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.clinbrain.datac.model.auto.TableLoggerWithBLOBs">
    update table_logger
    set logger_file = #{loggerFile,jdbcType=VARCHAR},
      table_id = #{tableId,jdbcType=INTEGER},
      source_batch = #{sourceBatch,jdbcType=VARCHAR},
      target_batch = #{targetBatch,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      source_data = #{sourceData,jdbcType=LONGVARCHAR},
      target_data = #{targetData,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clinbrain.datac.model.auto.TableLogger">
    update table_logger
    set logger_file = #{loggerFile,jdbcType=VARCHAR},
      table_id = #{tableId,jdbcType=INTEGER},
      source_batch = #{sourceBatch,jdbcType=VARCHAR},
      target_batch = #{targetBatch,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>